name: Java CI

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BRANCH_NAME: ${{ github.ref_name }}
      SHORT_SHA: ${{ github.sha }}
      IMAGE_TAG: ${{ github.ref_name }}-${{ github.sha }}
      IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.ref_name }}-${{ github.sha }}
      IMAGE_NAME_LATEST: ghcr.io/${{ github.repository }}:latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: "21"
          distribution: "temurin"
      - name: Compile Java project
        run: |
          mkdir -p API/bin
          javac -d API/bin API/src/*.java
      - name: Build Docker image
        run: |
          BRANCH_NAME_SAFE=$(echo "${{ github.ref_name }}" | sed 's#[^a-zA-Z0-9._-]#-#g')
          IMAGE_NAME_LC="ghcr.io/${{ github.repository }}:${BRANCH_NAME_SAFE}-${{ github.sha }}"
          IMAGE_NAME_LC_LATEST="ghcr.io/${{ github.repository }}:latest"
          IMAGE_NAME_LC=$(echo $IMAGE_NAME_LC | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME_LC_LATEST=$(echo $IMAGE_NAME_LC_LATEST | tr '[:upper:]' '[:lower:]')
          docker build -f api.Dockerfile -t $IMAGE_NAME_LC .
          docker tag $IMAGE_NAME_LC $IMAGE_NAME_LC_LATEST
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push Docker images (branch-sha + latest)
        run: |
          BRANCH_NAME_SAFE=$(echo "${{ github.ref_name }}" | sed 's#[^a-zA-Z0-9._-]#-#g')
          IMAGE_NAME_LC="ghcr.io/${{ github.repository }}:${BRANCH_NAME_SAFE}-${{ github.sha }}"
          IMAGE_NAME_LC_LATEST="ghcr.io/${{ github.repository }}:latest"
          IMAGE_NAME_LC=$(echo $IMAGE_NAME_LC | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME_LC_LATEST=$(echo $IMAGE_NAME_LC_LATEST | tr '[:upper:]' '[:lower:]')
          docker push $IMAGE_NAME_LC
          docker push $IMAGE_NAME_LC_LATEST
  test-with-docker:
    needs: build
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository }}:${{ github.ref_name }}-${{ github.sha }}
    steps:
      - name: Pull image and run container
        run: |
          IMAGE_NAME_LC=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
          docker pull $IMAGE_NAME_LC
          CONTAINER_ID=$(docker run -d --rm -p 8080:8080 $IMAGE_NAME_LC)
          echo "Container started: $CONTAINER_ID"
      - name: Test API endpoint
        run: |
          sleep 5 # attendre que le serveur d√©marre
          curl --fail http://localhost:8080 || (docker logs $(docker ps -q) && exit 1)
      - name: Stop container
        if: always()
        run: |
          docker stop $(docker ps -q)
